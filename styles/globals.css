@tailwind base;
@tailwind components;
@tailwind utilities;

@import url("https://fonts.googleapis.com/css2?family=Allerta&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Rubik:ital,wght@0,700;1,400&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Work+Sans:wght@700&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Inter:wght@400;800&display=swap");
/* @font-face {
  font-family: "MyFont";
  src: url("../Assets/Font/GTWalsheimPro-Regular.ttf") format("woff2");
} */
.custom-clip-path {
  clip-path: polygon(0 0, 100% 0, 100% 40%, 0 20%);
  --webkit-clip-path: polygon(0 0, 100% 0, 100% 40%, 0 20%);
}

.hero-clip-path {
  clip-path: url(#myCurve);
}
.rounded-polygon {
  width: 200px; /* Set the desired width of the shape */
  height: 100px; /* Set the desired height of the shape */
  background-color: #f89640; /* Set the background color */
  position: relative;
  clip-path: polygon(
    0 0,
    100% 0,
    100% 85%,
    50% 100%,
    0 85%
  ); /* Create the polygon shape */
}

.rounded-polygon::before {
  content: "";
  display: block;
  width: 100%;
  height: 20px; /* Set the desired height of the rounded bottom */
  background-color: #f89640; /* Set the background color (same as the main element) */
  border-radius: 50%; /* Apply a border-radius to make it rounded */
  position: absolute;
  bottom: -10px; /* Adjust this value to control the amount of rounding */
  left: 0;
}

.support-box {
  clip-path: polygon(
    calc(100% - 28.5px) calc(100% - 0.90000000000001px),
    32.2px calc(100% - 0.90000000000001px),
    32.2px calc(100% - 0.90000000000001px),
    26.973px calc(100% - 1.321px),
    22.016px calc(100% - 2.54px),
    17.395px calc(100% - 4.491px),
    13.176px calc(100% - 7.108px),
    9.425px calc(100% - 10.325px),
    6.208px calc(100% - 14.076px),
    3.591px calc(100% - 18.295px),
    1.64px calc(100% - 22.916px),
    0.421px calc(100% - 27.873px),
    5.3248111102418e-31px calc(100% - 33.1px),
    0px 87.4px,
    0px 87.4px,
    0.1942px 84.5609px,
    0.7616px 81.8232px,
    1.6794px 79.2163px,
    2.9248px 76.7696px,
    4.475px 74.5125px,
    6.3072px 72.4744px,
    8.3986px 70.6847px,
    10.7264px 69.1728px,
    13.2678px 67.9681px,
    16px 67.1px,
    calc(100% - 30.8px) 0.700002px,
    calc(100% - 30.8px) 0.700002px,
    calc(100% - 26.1225px) 0.019601458px,
    calc(100% - 21.568px) 0.212801024px,
    calc(100% - 17.2235px) 1.211200686px,
    calc(100% - 13.176px) 2.946400432px,
    calc(100% - 9.5125px) 5.35000025px,
    calc(100% - 6.3200000000001px) 8.353600128px,
    calc(100% - 3.6855px) 11.888800054px,
    calc(100% - 1.696px) 15.887200016px,
    calc(100% - 0.43850000000003px) 20.280400002px,
    calc(100% - 5.6843418860808e-14px) 25px,
    calc(100% - 0px) calc(100% - 29.4px),
    calc(100% - 0px) calc(100% - 29.4px),
    calc(100% - 0.37139999999999px) calc(100% - 24.7869px),
    calc(100% - 1.4471999999999px) calc(100% - 20.4072px),
    calc(100% - 3.1698px) calc(100% - 16.3203px),
    calc(100% - 5.4816px) calc(100% - 12.5856px),
    calc(100% - 8.325px) calc(100% - 9.2625px),
    calc(100% - 11.6424px) calc(100% - 6.4104px),
    calc(100% - 15.3762px) calc(100% - 4.0887px),
    calc(100% - 19.4688px) calc(100% - 2.3568px),
    calc(100% - 23.8626px) calc(100% - 1.2741px),
    calc(100% - 28.5px) calc(100% - 0.90000000000001px)
  );
}

.body {
  margin: 0;
  padding: 0;
  display: flex;
  height: 20vh;
  justify-content: center;
  align-items: center;
  font-family: sans-serif;
  background: transparent;
}

.indicator {
  position: relative;
  width: 16px;
  height: 16px;

  transform: rotate(45deg);
}
.indicator span {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  box-sizing: border-box;
  border: none;
  border-bottom: 3px solid #fff;
  border-right: 3px solid #fff;
  animation: animate 1s linear infinite;
}
.indicator span:nth-child(1) {
  top: -20px;
  left: -20px;
  animation-delay: 0s;
}
.indicator span:nth-child(2) {
  top: -10px;
  left: -10px;
  animation-delay: 0.2s;
}
.indicator span:nth-child(3) {
  top: 0;
  left: 0;
  animation-delay: 0.4s;
}
.indicator span:nth-child(4) {
  top: 10px;
  left: 10px;
  animation-delay: 0.6s;
}
.indicator span:nth-child(5) {
  top: 20px;
  left: 20px;
  animation-delay: 0.8s;
}
@keyframes animate {
  0% {
    border-color: #fff;
    transform: translate(0, 0);
  }
  20% {
    border-color: #fff;
    transform: translate(15px, 15px);
  }
  20.1%,
  100% {
    border-color: #ffd64a;
  }
}

.swiper {
  width: 100%;
  height: 100%;
}

.swiper-slide {
  text-align: center;
  font-size: 18px;
  background: #fff;

  /* Center slide text vertically */
  display: flex;
  justify-content: center;
  align-items: center;
}

.swiper-slide img {
  display: block;
  width: 100%;
  height: 100%;
  object-fit: cover;
}
.swiper-button-next {
  border: 1px solid #f89640;
  padding: 5px;
  color: black !important;
  background-color: wheat;
}

.swiper-button-next:hover {
  background-color: #ffd64a;
}

.swiper-button-next::after {
  font-size: 22px !important;
  font-weight: bold;
}

.swiper-button-prev {
  border: 1px solid #f89640;
  padding: 5px;
  color: black !important;
  background-color: wheat;
}

.swiper-button-prev:hover {
  background-color: #ffd64a;
}

.swiper-button-prev::after {
  font-size: 22px !important;
  font-weight: bold;
}
.hexagon-wrapper {
  margin: auto;
  display: flex;
  text-align: initial;
  width: 45px;
  height: 45px;
  cursor: pointer;
}

.hexagon {
  position: relative;
  width: 46%;
  height: 80%;
  margin: auto;
  color: white;
  background: linear-gradient(-180deg, #0479ae, #045c94);
  display: flex;
  align-content: center;
  justify-content: center;
  transition: 0.5s;
}

.hexagon span {
  z-index: 1;
  margin: auto;
  font-size: 16px;
  color: whitesmoke;
  background: linear-gradient(45deg, #a58fe9, #e37682);
  background-clip: text;
  -webkit-background-clip: text;
}

.hexagon:before,
.hexagon:after {
  position: absolute;
  content: "";
  background: inherit;
  height: 100%;
  width: 100%;
  border-radius: 0;
  transition: 0.5s;
  transform-origin: center;
}
.hexagon:before {
  transform: rotateZ(60deg);
}
.hexagon:after {
  transform: rotateZ(-60deg);
}
.hexagon:hover {
  border-radius: 50px;
  transition: 0.5s;
}
.hexagon:hover:before {
  border-radius: 50px;
  transition: 0.5s;
}
.hexagon:hover:after {
  border-radius: 50px;
  transition: 0.5s;
}
.meeting-clip-path {
  clip-path: polygon(10% 0, 90% 0, 100% 50%, 90% 100%, 10% 100%, 0 50%);
}

/* react calender */
.react-calendar {
  width: 100% !important;
  border: none !important;
  line-height: 0.75em !important;
}

.react-calendar__navigation {
  height: 30px !important;
  background-color: #045c94;
  color: white;
}

.react-calendar button .react-calendar__month-view__days__day--weekend:hover {
  cursor: not-allowed !important;
}
.double-checked::before {
  content: "\2713\2713"; /* Unicode character for double-checked sign */
  display: inline-block;
  margin-right: 8px; /* Add spacing between the sign and the text */
  color: green;
  font-weight: 600; /* Set the color of the sign */
  font-size: 16px; /* Adjust the font size as needed */
}

/* Additional styles for the list items (optional) */
.double-checked {
  list-style: none; /* Remove default list bullet points */
  margin-bottom: 10px; /* Add spacing between list items */
}
.photo_top {
  position: absolute;
  top: 0;
  left: 0;
}
.photo_top::after {
  border-radius: 0 3px 0 0;
  display: block;
  content: "";
  flex: 1 0 0;
  height: 1px;
  border-top: 2px solid #1fa2ed;
}
.module__top {
  cursor: move;

  width: 100%;
  position: absolute;
  top: 0;
  left: 0;
}
.module__top::before {
  border-radius: 3px 0 0 0;
  display: block;
  content: "";
  flex: 2 0 0;
  height: 1px;
  border-top: 2px solid #1fa2ed;
}
.module__top::after {
  border-radius: 0 3px 0 0;
  display: block;
  content: "";
  flex: 2 0 0;
  height: 1px;
  border-top: 2px solid #1fa2ed;
}
.shape {
  display: inline-block;

  border-radius: 10px 20px 30px 40px/30px;
}
.shape8 {
  border-radius: 0 10px 20px;

  display: inline-block;
  border: 5px solid #ffd64a;
}
.navItem {
  position: relative;
  padding: 0 10px;
}

.navItem::after {
  content: "";
  position: absolute;
  background-color: whitesmoke;
  height: 3px;
  width: 0;
  left: 0;
  bottom: 0;
  transition: 0.3s;
}

.navItem:hover::after,
.navItem:active::after {
  width: 100%;
}
